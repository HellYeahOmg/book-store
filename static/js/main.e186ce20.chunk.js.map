{"version":3,"sources":["actions/cart.js","containers/Cart.js","components/Cart.jsx","containers/Menu.js","components/Menu.jsx","components/ProductItem.jsx","actions/products.js","containers/Products.js","components/Products.jsx","actions/filter.js","containers/Filter.js","components/Filter.jsx","App.js","serviceWorker.js","reducers/products.js","reducers/cart.js","reducers/index.js","index.js","components/Router.js"],"names":["deleteFromCart","book","type","payload","connect","state","books","cart","items","dispatch","bindActionCreators","props","react_default","a","createElement","className","Link","to","length","Fragment","map","index","title","image","quantity","key","src","alt","onClick","totalPrice","numberOfItems","count","forEach","item","countItems","_ref","ProductItem","author","price","onAdd","loadProducts","data","addToCart","id","products","isReady","ProductItem_ProductItem","Object","assign","filterByAll","filterByHighPrice","filterByLowPrice","filterByAuthor","searchBy","App","_this","this","fetch","concat","process","then","response","json","containers_Menu","containers_Products","containers_Filter","Component","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","arguments","undefined","action","objectSpread","toConsumableArray","sort","b","localeCompare","oldPrice","newPrice","newProduct","arr","slice","push","shouldAdd","filter","priceToDelete","reduceTotalPrice","store","createStore","composeWithDevTools","ReactDOM","render","es","BrowserRouter","basename","Switch","Route","exact","path","component","Cart","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e186ce20.chunk.js","sourcesContent":["export function deleteFromCart(book) {\r\n  return {\r\n    type: \"DELETE_FROM_CART\",\r\n    payload: book\r\n  };\r\n}\r\n","import { Cart } from \"../components/Cart\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { deleteFromCart } from \"../actions/cart\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    books: state.cart.items\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ deleteFromCart }, dispatch);\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Cart);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Cart = props => {\r\n  return (\r\n    <div className=\"cart\">\r\n      <Link to=\"/\">Назад</Link>\r\n      {props.books.length === 0 ? (\r\n        <p>Корзина пуста</p>\r\n      ) : (\r\n        <>\r\n          {props.books.map((book, index) => {\r\n            const { title, image, quantity } = book;\r\n            return (\r\n              <div key={index} className=\"cart__item\">\r\n                <div className=\"cart__img\">\r\n                  <img src={image} alt={title} />\r\n                </div>\r\n                <div className=\"cart__book-title\">\r\n                  {title} {quantity} шт.\r\n                </div>\r\n                <button\r\n                  className=\"cart__delete\"\r\n                  onClick={() => props.deleteFromCart(book)}\r\n                >\r\n                  Удалить\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { Menu } from \"../components/Menu\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst mapStateToProps = state => {\r\n  const countItems = () => {\r\n    // подсчет всех книг в корзине, считает по полю quantity у каждой книги\r\n    var count = 0;\r\n    state.cart.items.forEach(item => {\r\n      count += item.quantity;\r\n    });\r\n    return count;\r\n  };\r\n  return {\r\n    totalPrice: state.cart.totalPrice,\r\n    numberOfItems: countItems()\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({}, dispatch);\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Menu);\r\n","import React from \"react\";\r\nimport Cart from \"../containers/Cart\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Menu = ({ totalPrice, numberOfItems }) => (\r\n  <div className=\"menu\">\r\n    <div className=\"menu__title\">Shopping card</div>\r\n    <div className=\"menu__totalPrice\">\r\n      Итого: <b>{totalPrice} руб.</b>\r\n    </div>\r\n    <div className=\"menu__cart\">\r\n      <Link to=\"/cart\">\r\n        Корзина <span className=\"menu__cart--box\">{numberOfItems} шт.</span>\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const ProductItem = book => {\r\n  var { image, title, author, price, onAdd, quantity } = book;\r\n  return (\r\n    <div className=\"product__item\">\r\n      <div className=\"product__image\">\r\n        <img src={image} alt={title} />\r\n      </div>\r\n      <div className=\"product__content\">\r\n        <div className=\"product__title\">{title}</div>\r\n        <div className=\"product__author\">{author}</div>\r\n        <div className=\"product__price\">{price} рублей</div>\r\n      </div>\r\n      <button className=\"product__btn\" onClick={() => onAdd(book)}>\r\n        Добавить в корзину {quantity}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","export function loadProducts(data) {\r\n  return {\r\n    type: \"LOAD_PRODUCTS\",\r\n    payload: data\r\n  };\r\n}\r\n\r\nexport function addToCart({ id, title, author, image, price }) {\r\n  let item = {\r\n    image,\r\n    title,\r\n    author,\r\n    id,\r\n    price,\r\n    quantity: 1\r\n  };\r\n\r\n  return {\r\n    type: \"ADD_TO_CART\",\r\n    payload: item\r\n  };\r\n}\r\n","import { Products } from \"../components/Products\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { addToCart } from \"../actions/products\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.products.items,\r\n    isReady: state.products.isReady\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ addToCart }, dispatch);\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Products);\r\n","import React from \"react\";\r\nimport { ProductItem } from \"./ProductItem\";\r\n\r\nexport const Products = props => (\r\n  <div className=\"products\">\r\n    {props.isReady\r\n      ? props.products.map(item => {\r\n          return (\r\n            <ProductItem {...item} key={item.id} onAdd={props.addToCart} />\r\n          );\r\n        })\r\n      : \"Загрузка...\"}\r\n  </div>\r\n);\r\n","export const filterByAll = () => {\r\n  return {\r\n    type: \"ALL\"\r\n  };\r\n};\r\n\r\nexport const filterByHighPrice = () => {\r\n  return {\r\n    type: \"PRICE_HIGH\"\r\n  };\r\n};\r\nexport const filterByLowPrice = () => {\r\n  return {\r\n    type: \"PRICE_LOW\"\r\n  };\r\n};\r\nexport const filterByAuthor = () => {\r\n  return {\r\n    type: \"AUTHOR\"\r\n  };\r\n};\r\n\r\nexport const searchBy = key => {\r\n  return {\r\n    type: \"SEARCH\",\r\n    payload: key\r\n  };\r\n};\r\n","import { Filter } from \"../components/Filter\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  filterByAll,\r\n  filterByHighPrice,\r\n  filterByLowPrice,\r\n  filterByAuthor,\r\n  searchBy\r\n} from \"../actions/filter\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    // actions вызываются в filter, но обрабатывает их reducer из products\r\n    {\r\n      filterByAll,\r\n      filterByHighPrice,\r\n      filterByLowPrice,\r\n      filterByAuthor,\r\n      searchBy\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Filter);\r\n","import React from \"react\";\r\n\r\nexport const Filter = props => {\r\n  return (\r\n    <div className=\"filter\">\r\n      <div className=\"filter__type\" onClick={props.filterByAll}>\r\n        Все\r\n      </div>\r\n      <div className=\"filter__type\" onClick={props.filterByHighPrice}>\r\n        Цена (дорогие)\r\n      </div>\r\n      <div className=\"filter__type\" onClick={props.filterByLowPrice}>\r\n        Цена (дешевые)\r\n      </div>\r\n      <div className=\"filter__type\" onClick={props.filterByAuthor}>\r\n        Автор\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Menu from \"./containers/Menu\";\nimport Products from \"./containers/Products\";\nimport { loadProducts } from \"./actions/products\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Filter from \"./containers/Filter\";\n\nclass App extends Component {\n  componentDidMount() {\n    fetch(`${process.env.PUBLIC_URL}/books.json`)\n      .then(response => response.json())\n      .then(response => this.props.loadProducts(response));\n  }\n  render() {\n    return (\n      <>\n        <Menu />\n        <div className=\"content\">\n          <Products />\n          <Filter />\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatcheToProps = dispatch => {\n  return bindActionCreators({ loadProducts }, dispatch);\n};\n\nexport default connect(\n  null,\n  mapDispatcheToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var initialState = {\r\n  items: [],\r\n  isReady: false\r\n};\r\n\r\nexport const productsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOAD_PRODUCTS\":\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        isReady: true\r\n      };\r\n    // т.к. просто так нельзя получать данные из разных редюсеров, то я решил просто обрабатывать actions из filter здесь\r\n    case \"ALL\":\r\n      return {\r\n        ...state,\r\n        items: [...state.items].sort((a, b) => {\r\n          return a.id - b.id;\r\n        })\r\n      };\r\n    case \"PRICE_HIGH\":\r\n      return {\r\n        ...state,\r\n        items: [...state.items].sort((a, b) => {\r\n          return b.price - a.price;\r\n        })\r\n      };\r\n    case \"PRICE_LOW\":\r\n      return {\r\n        ...state,\r\n        items: [...state.items].sort((a, b) => {\r\n          return a.price - b.price;\r\n        })\r\n      };\r\n    case \"AUTHOR\":\r\n      return {\r\n        ...state,\r\n        items: [...state.items].sort((a, b) => {\r\n          return a.author.localeCompare(b.author);\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","var initialState = {\r\n  items: [],\r\n  totalPrice: 0\r\n};\r\n// Мне подсказали, что хранить это в редюсере не лучшая идея, но я уже сделаль, поэтому в следующий раз\r\nconst addTotalPrice = (oldPrice, newPrice) => oldPrice + newPrice;\r\nconst reduceTotalPrice = (oldPrice, priceToDelete, quantity) =>\r\n  oldPrice - priceToDelete * quantity;\r\n\r\nconst addToCart = (items, newProduct) => {\r\n  // Пишу костыль, потому что лень разбираться с Array.reduce(). Суть - проверка на дубликаты, если есть, то не добавляем, а увеличиваем quantity\r\n  var arr = items.slice();\r\n  if (arr.length === 0) {\r\n    arr.push(newProduct);\r\n  } else {\r\n    var shouldAdd = true;\r\n    arr.forEach(item => {\r\n      if (item.id === newProduct.id) {\r\n        item.quantity++;\r\n        shouldAdd = false;\r\n        // совпадение в любом случае только одно\r\n      }\r\n    });\r\n    if (shouldAdd) arr.push(newProduct); // если все-таки нет совпадений, то добавить в конец массива\r\n  }\r\n  return arr;\r\n};\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_CART\":\r\n      return {\r\n        ...state,\r\n        items: addToCart(state.items, action.payload),\r\n        totalPrice: addTotalPrice(state.totalPrice, action.payload.price)\r\n      };\r\n\r\n    case \"DELETE_FROM_CART\":\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(book => book.id !== action.payload.id),\r\n        totalPrice: reduceTotalPrice(\r\n          state.totalPrice,\r\n          action.payload.price,\r\n          action.payload.quantity\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { productsReducer } from \"./products\";\r\nimport { cartReducer } from \"./cart\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  products: productsReducer,\r\n  cart: cartReducer\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"./reducers/index\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Router } from \"./components/Router\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Cart from \"../containers/Cart\";\r\nimport App from \"../App\";\r\n\r\nexport const Router = props => (\r\n  <BrowserRouter basename=\"/book-store\">\r\n    <Switch>\r\n      <Route exact path=\"/\" component={App} />\r\n      <Route path=\"/cart\" component={Cart} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n"],"sourceRoot":""}